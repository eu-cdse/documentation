---
title: "Handling Sentinel-1 COG_SAFE products "
format:
  html:
    code-fold: true
jupyter: python3
---

## How to search for COG_SAFE products with OData API?

The Sentinel-1 GRD COG_SAFE products can be filtered by the Odata API query using three methods:

1.	Filtering ‘COG.SAFE’ substring in the product name:

Example of a query:

::: {.panel-tabset}

# HTTP Request

[`https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=contains(name,%27COG%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-21T00:00:00.000Z`](https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=contains(name,%27COG%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-21T00:00:00.000Z){target="_blank"}

:::

2.	Using proper data type with “-COG” suffix. One of: S1_GRDF_1S-COG,S2_GRDF_1S-COG,S3_GRDF_1S-COG,S4_GRDF_1S-COG,S5_GRDF_1S-COG,S6_GRDF_1S-COG,S1_GRDH_1S-COG,S2_GRDH_1S-COG,S3_GRDH_1S-COG,S4_GRDH_1S-COG,S5_GRDH_1S-COG,S6_GRDH_1S-COG,S1_GRDM_1S-COG,S2_GRDM_1S-COG,S3_GRDM_1S-COG,S4_GRDM_1S-COG,S5_GRDM_1S-COG,S6_GRDM_1S-COG,IW_GRDH_1S-COG,IW_GRDM_1S-COG,EW_GRDH_1S-COG,EW_GRDM_1S-COG,WV_GRDM_1S-COG

Example of a query:

::: {.panel-tabset}

# HTTP Request

[`https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27IW_GRDH_1S-COG%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-21T04:00:00.000Z&$top=10`]( https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27IW_GRDH_1S-COG%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-21T04:00:00.000Z&$top=10){target="_blank"}

:::

3.	Filtering ‘GRD’ substring in product name and ‘’origin” attribute equal “CLOUDFERRO”.

Example of a query:

::: {.panel-tabset}

# HTTP Request

[`https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=contains(name,%27GRD%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27origin%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27CLOUDFERRO%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-03T04:00:00.000Z&$top=10`](https://catalogue.dataspace.copernicus.eu/odata/v1/Products?$filter=contains(name,%27GRD%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27origin%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27CLOUDFERRO%27)%20and%20ContentDate/Start%20gt%202022-05-03T00:00:00.000Z%20and%20ContentDate/Start%20lt%202022-05-03T04:00:00.000Z&$top=10){target="_blank"}

:::

## How to search for COG_SAFE products in the Browser?

There are two separate options available for Sentinel-1 GRD products. Selecting the “Level-1 GRD COG” option under Sentinel-1 will return COG_SAFE products while option “Level-1 GRD” will return  original GRD products. If you would like to search for both type of products, select both options.

## How were original Sentinel-1 GRD products converted to COG_SAFE products?

The following changes were made during the conversion of original Sentinel-1 GRD products to COG_SAFE products:

1.	All GeoTiff files available in the measurements folder were converted to cloud optimized GeoTIFF format with the gdal command:

::: {.panel-tabset}

# CLI

```{bash}
gdal_translate -of COG -a_nodata 0 -co OVERVIEW_COUNT=6 -co BLOCKSIZE=1024 -co BIGTIFF=NO -co OVERVIEW_RESAMPLING=RMS -co COMPRESS=ZSTD -co NUM_THREADS=ALL_CPUS -mo GRD_ORIGINAL_HEADER_SIZE=<original_header_size> -mo GRD_ORIGINAL_FOOTER_SIZE=<original_footer_size> <input_tiff>.tiff <input_tiff>-cog.tiff 
```
:::
    More information about what these options mean can be found in the [GDAL official documentation](https://gdal.org/programs/gdal_translate.html){target='_blank'}. Note that the output filename has a suffix “-cog”, which indicates that the files were converted to COGs.

2.	A suffix “_COG” was added to the name of the product and a new CRC code was calculated. For example, the original product 

    S1A_IW_GRDH_1SDV_20230206T165050_20230206T165115_047118_05A716_**53C5**.safe became 

    S1A_IW_GRDH_1SDV_20230206T165050_20230206T165115_047118_05A716_**74F9_COG**.safe.

3.	Manifest file was adjusted so that it reflects these changes:

    a.	`safe:processing` element with a name="COG Conversion" was added. It contains metadata about the conversion and includes the name of the original product under `safe:resource` child element.
    
    b.	`dataObject` elements, which describe the measurements files, have updated values for “size”, “href”, “checksum”.
