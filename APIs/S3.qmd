---
title: Access to EO data via S3
---

S3 API is one of the main access methods for EO data. It is suitable for Third Party applications that require high-performance parallel access and scalability. Moreover, any user who wants to connect from an external infrastructure to the Copernicus Data Space Ecosystem collection can do so
through the S3 protocol.

## Object Storage endpoints

Access to EO data hosted on object storage is using an API compatible with S3. 

S3 is an object storage service with which you can retrieve data over HTTPS using REST API.

There are multiple S3 endpoints for accessing the EO Data. The default S3 endpoint address is:
[https://eodata.dataspace.copernicus.eu/](https://eodata.dataspace.copernicus.eu/)
 
This endpoint will provide access to EO data which is stored on the Object Storage. A Global Service Load Balancer (GSLB) directs the request to either CloudFerro Cloud or OpenTelekom Cloud (OTC) S3 endpoint. The decision is based on the location of the DNS resolver. ([Global Service Load Balancer](https://documentation.dataspace.copernicus.eu/ResearchNetwork.html#global-service-load-balancer){target="_blank"})

Users who want to make sure they are forwarded to OTC S3 endpoint have to use the following URL:
[https://eodata.ams.dataspace.copernicus.eu/](https://eodata.ams.dataspace.copernicus.eu/)


## Registration

To generate the necessary credentials, you must have a registered account on dataspace.copernicus.eu. If you don't have an account, you can register [here](https://identity.dataspace.copernicus.eu/auth/realms/CDSE/protocol/openid-connect/auth?client_id=cdse-public&response_type=code&scope=openid&redirect_uri=https%3A//dataspace.copernicus.eu/account/confirmed/1).

## Generate secrets

In order to obtain secrets, <a href="https://eodata-s3keysmanager.dataspace.copernicus.eu/">visit page</a> and log in with the Copernicus Data Space Ecosystem account for which the keys are to be generated. After successfully logging in, indicate the expiration date of the secrets using the "Add Credentials" button and click "Confirm".

![](_images/s3_cdse_1.png)

![](_images/s3_cdse_2.png)

Note that the Secret Key will be displayed only once, and you cannot view it again after clicking the Close button. Copy your secret key and keep it in a safe place.


## Example access using s3cmd

The example shown below assumes the use of a Linux environment.

With the access and secret key and the endpoint `eodata.dataspace.copernicus.eu`, you can use any tool to handle access via S3. Below is an example of how to access EO Data using the s3cmd.

First, we recommend creating a configuration file. You can create it with tools like vi/vim or nano:
```
vi .s3cfg
vim .s3cfg
nano .s3cfg
```
Copy the following content to your configuration file with your access and secret key:
```
[default]
access_key = <access_key>
host_base = eodata.dataspace.copernicus.eu
host_bucket = eodata.dataspace.copernicus.eu
human_readable_sizes = False
secret_key = <secret_key>
use_https = true
check_ssl_certificate = true
```
Then you can run any s3cmd command pointing to the previously created configuration file with option `-c`:
```
$ s3cmd -c .s3cfg ls s3://eodata/
```
Below is an example of downloading a product from the EO data repository using s3cmd:
```
s3cmd -c ~/.s3cfg get s3://eodata/Sentinel-1/SAR/SLC/2016/12/28/S1A_IW_SLC__1SDV_20161228T044442_20161228T044509_014575_017AE8_4C26.SAFE/measurement/s1a-iw2-slc-vv-20161228t044442-20161228t044508-014575-017ae8-005.tiff
```
If the objects in the repository are archives, for example, such as `S1B_IW_SLC__1SDV_20191013T155948_20191013T160015_018459_022C6B_13A2.SAFE` use the resursive option `––recursive` or `-r` to download whole product.

Example with the recursive option:
```
s3cmd -c ~/.s3cfg -r get s3://eodata/Sentinel-1/SAR/SLC/2019/10/13/S1B_IW_SLC__1SDV_20191013T155948_20191013T160015_018459_022C6B_13A2.SAFE/
```

## Example script to download product using boto3

```
import boto3
import os

session = boto3.session.Session()
s3 = boto3.resource(
	's3',
	endpoint_url='https://eodata.dataspace.copernicus.eu',
	aws_access_key_id=access_key,
	aws_secret_access_key=secret_key,
	region_name='default'
)  # generated secrets

def download(bucket, product: str, target: str = "") -> None:
	"""
	Downloads every file in bucket with provided product as prefix

	Raises FileNotFoundError if the product was not found

	Args:
		bucket: boto3 Resource bucket object
		product: Path to product
		target: Local catalog for downloaded files. Should end with an `/`. Default current directory.
	"""
	files = bucket.objects.filter(Prefix=product)
	if not list(files):
		raise FileNotFoundError(f"Could not find any files for {product}")
	for file in files:
		os.makedirs(os.path.dirname(file.key), exist_ok=True)
		if not os.path.isdir(file.key):
			bucket.download_file(file.key, f"{target}{file.key}")

# path to the product to download
download(s3.Bucket("eodata"), "Sentinel-1/SAR/SLC/2019/10/13/S1B_IW_SLC__1SDV_20191013T155948_20191013T160015_018459_022C6B_13A2.SAFE/")
```

## Accessing EOData via AWS CLI

In this section, you will access EOData resources using a Linux OS using **AWS Command Line Interface (AWS CLI)**.

### Prerequirements

**Check for system updates:**
```
$ sudo apt-get update -y
```
**Install prerequirements:**
```
$ sudo apt-get install unzip groff less -y
```
**Generate S3 credentials at CDSE:**

In order to access EOData via S3 you must obtain secrets (**access** and **secret** key). Please visit following <a href="https://eodata-s3keysmanager.dataspace.copernicus.eu/">page</a> and log in with Copernicus Data Space Ecosystem account for which the keys are to be generated.

If you dont have an account, you can register via following <a href="https://documentation.dataspace.copernicus.eu/Registration.html">link</a>.

### Install or update the AWS CLI

To update your current installation of AWS CLI, download a new installer each time you update to overwrite previous versions. Follow these steps from the command line to install the AWS CLI on Linux.
```
$ curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
```
Verify if client is installed:
```
$ aws --version
aws-cli/2.13.32 Python/3.11.6 Linux/5.15.0-75-generic exe/x86_64.ubuntu.22 prompt/off
```
### Configuration

Enter the following command:
```
$ aws configure
```
You will be prompted for providing certain connection details. Below are the values which you should use during the configuration. Replace **access_key** and **secret_key** with appropriate keys you obtained previously.

```
AWS Access Key ID [None]: <access_key>
AWS Secret Key ID [None]: <secret_key>
Default region name [None]: default
Default output format [None]: text
```

### List and download products

Now you can use AWS CLI commands (documentation available via following link: https://aws.amazon.com/cli/)

**Specify the CDSE endpoint:**

Use following line to specify endpoint.
```
export AWS_ENDPOINT_URL=https://eodata.dataspace.copernicus.eu/
```
**List available buckets:**

```
$ aws s3 ls s3://eodata/
eouser@aws-cli:~$ aws s3 ls s3://eodata/
                           PRE C3S/
                           PRE CAMS/
                           PRE CEMS/
                           PRE CLMS/
                           PRE CMEMS/
                           PRE Envisat/
                           PRE Envisat-ASAR/
                           PRE Global-Mosaics/
                           PRE Jason-3/
                           PRE Landsat-5/
                           PRE Landsat-7/
                           PRE Landsat-8/
                           PRE SMOS/
                           PRE Sentinel-1/
                           PRE Sentinel-1-COG/
                           PRE Sentinel-1-RTC/
                           PRE Sentinel-2/
                           PRE Sentinel-3/
                           PRE Sentinel-5P/
                           PRE Sentinel-6/
                           PRE auxdata/
```
**Downloading products:**

In order to download products from repository follow the steps. 

Below example is downloading product from Sentinel-2 named "S2A_MSIL2A_20240115T235221_N0510_R130_T55HGS_20240116T021554.SAFE" and saving it at user's home location.
```
$ aws s3 cp s3://eodata/Sentinel-2/MSI/L2A/2024/01/15/S2A_MSIL2A_20240115T235221_N0510_R130_T55HGS_20240116T021554.SAFE/ /home/eouser/S2A_MSIL2A_20240115T235221_N0510_R130_T55HGS_20240116T021554.SAFE

download: s3://eodata/Sentinel-2/MSI/L2A/2024/01/15/S2A_MSIL2A_20240115T235221_N0510_R130_T55HGS_20240116T021554.SAFE/ to ./S2A_MSIL2A_20240115T235221_N0510_R130_T55HGS_20240116T021554.SAFE
```
After this operation, you should downloaded product in specified path.
