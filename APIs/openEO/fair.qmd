---
title: "FAIR data & open science"
execute:
  echo: false
jupyter: python3
aliases:
  - /fair.html
---

## FAIR

One of the goals of openEO is to support [FAIR principles](https://www.go-fair.org/fair-principles/) and open science. These principles are seamlessly integrated into the Copernicus Data Space Ecosystem, making it intuitive to adhere to them.
Consequently, using openEO allows users to develop FAIR-compliant open solutions automatically. 

These are a few examples:

- *[F2 Rich metadata](https://www.go-fair.org/fair-principles/f2-data-described-rich-metadata/)* openEO generates rich STAC metadata
 that includes processing info, complete raster metadata, band information, etc.
- *[R1.2 Detailed provenance](https://www.go-fair.org/fair-principles/r1-2-metadata-associated-detailed-provenance/)* In result metadata [derived-from](https://github.com/radiantearth/stac-spec/blob/master/item-spec/item-spec.md#derived_from)
 links trace back to all input products. 
- *[R1.3 use of domain-relevant (meta)data standard](https://www.go-fair.org/fair-principles/r1-3-metadata-meet-domain-relevant-community-standards/)* By default, openEO generates STAC metadata.
 For the data formats, it supports well-known options such as Cloud-optimized Geotiff, netCDF with CF conventions, GeoParquet, and many more.

Find a concrete example of STAC metadata generated using openEO shown below:


::: {.panel-tabset}

# STAC metadata

```{python}

metadata= {
"assets": {
"openEO.nc": {
"eo:bands": [
{
"center_wavelength": 0.4924,
"name": "B02"
},
{
"center_wavelength": 0.5598,
"name": "B03"
},
{
"center_wavelength": 0.6646,
"name": "B04"
}
],
"file:nodata": [
-32768
],
"href": "https://openeo.dataspace.copernicus.eu/openeo/1.2/jobs/my_custom_job/results/assets/MzJjYzdkZGItZjdlMS00YjFjLTk3OTYtZjlmZTM5Y2I4ZmVi/eb3cbffb39820a19588bbff73e25000a/openEO.nc?expires=1709880758",
"proj:bbox": [
534060,
6479360,
797110,
6667130
],
"proj:epsg": 32633,
"proj:shape": [
26305,
18777
],
"raster:bands": [
{
"name": "B02",
"statistics": {
"maximum": 18792,
"mean": 1761.7649320274,
"minimum": -999,
"stddev": 3041.8121307017,
"valid_percent": 66.75
}
},
{
"name": "B03",
"statistics": {
"maximum": 17592,
"mean": 1767.9099226689,
"minimum": -799,
"stddev": 2827.4360730483,
"valid_percent": 66.75
}
},
{
"name": "B04",
"statistics": {
"maximum": 16840,
"mean": 1634.3294499714,
"minimum": -385,
"stddev": 2775.1541115591,
"valid_percent": 66.75
}
}
],
"roles": [
"data"
],
"title": "openEO.nc",
"type": "application/x-netcdf"
}
},
"description": "This is example STAC metadata as generated by the Copernicus Data Space openEO backend. Description and title is provided by the user.",
"extent": {
"spatial": {
"bbox": [
[
15.611572,
58.453481000000004,
20.093994,
60.042903999999986
]
]
},
"temporal": {
"interval": [
[
"2023-08-01T00:00:00Z",
"2023-08-15T00:00:00Z"
]
]
}
},
"id": "j-2401123752f848e4a1c72a108ef0c4ce",
"license": "proprietary",
"links": [
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T33VWF_20230801T161353.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T33VWF_20230801T161353.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T34VCL_20230801T161353.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T34VCL_20230801T161353.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T33VXF_20230801T161353.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T33VXF_20230801T161353.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T34VDM_20230801T161353.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/01/S2A_MSIL2A_20230801T100601_N0509_R022_T34VDM_20230801T161353.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VDM_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VDM_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXE_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXE_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCM_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCM_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCK_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCK_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCL_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T34VCL_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXG_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXG_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VWE_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VWE_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXF_20230804T155854.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/04/S2A_MSIL2A_20230804T101601_N0509_R065_T33VXF_20230804T155854.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T33VXG_20230809T131713.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T33VXG_20230809T131713.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T34VCM_20230809T131713.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T34VCM_20230809T131713.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T34VDM_20230809T131713.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/09/S2B_MSIL2A_20230809T101609_N0509_R065_T34VDM_20230809T131713.SAFE",
"type": "application/json"
},
{
"href": "/eodata/Sentinel-2/MSI/L2A/2023/08/11/S2A_MSIL2A_20230811T101031_N0509_R022_T33VWE_20230811T161756.SAFE",
"rel": "derived_from",
"title": "Derived from /eodata/Sentinel-2/MSI/L2A/2023/08/11/S2A_MSIL2A_20230811T101031_N0509_R022_T33VWE_20230811T161756.SAFE",
"type": "application/json"
},
{
"href": "https://openeo.dataspace.copernicus.eu/openeo/1.2/jobs/j-2401123752f848e4a1c72a108ef0c4ce/results",
"rel": "self",
"type": "application/json"
},
{
"href": "https://openeo.dataspace.copernicus.eu/openeo/1.2/jobs/j-2401123752f848e4a1c72a108ef0c4ce/results/MzJjYzdkZGItZjdlMS00YjFjLTk3OTYtZjlmZTM5Y2I4ZmVi/c2111d2821edc1de99fc8855a1842821?expires=1709880758",
"rel": "canonical",
"type": "application/json"
},
{
"href": "http://ceos.org/ard/files/PFS/SR/v5.0/CARD4L_Product_Family_Specification_Surface_Reflectance-v5.0.pdf",
"rel": "card4l-document",
"type": "application/pdf"
}
],
"openeo:status": "finished",
"providers": [
{
"description": "This data was processed on an openEO backend maintained by VITO.",
"name": "VITO",
"processing:expression":
{
"expression": {
"loadcollection1": {
"arguments": {
"bands": [
"B02",
"B03",
"B04"
],
"id": "SENTINEL2_L2A",
"properties": {
"eo:cloud_cover": {
"process_graph": {
"lte1": {
"arguments": {
"x": {
"from_parameter": "value"
},
"y": 85
},
"process_id": "lte",
"result": True
}
}
}
},
"spatial_extent": {
"east": 20.093994,
"north": 60.042903999999986,
"south": 58.453481000000004,
"west": 15.611572
},
"temporal_extent": [
"2023-08-01T00:00:00Z",
"2023-08-15T00:00:00Z"
]
},
"process_id": "load_collection"
},
"saveresult1": {
"arguments": {
"data": {
"from_node": "loadcollection1"
},
"format": "netcdf",
"options": {
"format": "netcdf",
"output_format": "netcdf"
}
},
"process_id": "save_result",
"result": True
}
},
"format": "openeo"
},
"processing:facility": "openEO Geotrellis backend",
"processing:software": {
"Geotrellis backend": "0.22.0a1"
},
"roles": [
"processor"
]
}
],
"stac_extensions": [
"https://stac-extensions.github.io/eo/v1.1.0/schema.json",
"https://stac-extensions.github.io/file/v2.1.0/schema.json",
"https://stac-extensions.github.io/processing/v1.1.0/schema.json",
"https://stac-extensions.github.io/projection/v1.1.0/schema.json"
],
"stac_version": "1.0.0",
"summaries": {
"instruments": []
},
"title": "EO product generated by openEO",
"type": "Collection"
}

from openeo.rest.job import JobResults, BatchJob
results = JobResults(BatchJob("my_job_id",connection=None))
results._results = metadata
results

```


:::

## Open Science

In the context of open science, a significant benefit of using openEO is that it allows workflows to be saved in a standardized format called openEO "process graphs". This enables scientists to share algorithms easily without exchanging complex code bases. OpenEO code or process graphs are also easier to understand since the backend manages much of the boilerplate logic.

This also impacts the replication of work: the same process graph can be executed on different areas or time periods. This capability allows researchers to determine whether an algorithm is broadly applicable or only effective in a specific environment.

Below is a straightforward process graph illustrating the extraction of Sentinel-2 data. While this example is simple, the underlying steps required to generate an analysis-ready datacube from raw Sentinel-2 L2A products are considerably complex. As a result, the process graph will be much easier to understand than the equivalent openEO code.

```{python}
import openeo
connection = openeo.connect("openeo.dataspace.copernicus.eu")
graph = metadata["providers"][0]["processing:expression"]["expression"]
connection.datacube_from_flat_graph(graph)
```