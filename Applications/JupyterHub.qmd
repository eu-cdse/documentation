---
title: "JupyterLab"
image: _images/jupyter_login.png
---

JupyterLab is a user-friendly tool for working with data and code. User can customize it by adding extra features and connecting it with other software. This makes organizing work, rectifying mistakes, and interacting with data easier. For more detailed information, please visit the [JupyterLab documentation](https://jupyterlab.readthedocs.io/en/stable/){target="_blank"}.

Within the Copernicus Dataspace ecosystem, a free of charge jupyterkab service is offered. It allows users to access and analyze Earth observation data effectively. 

## Notebooks

Within JupyterLab, python notebooks can be used as an interactive programming environment for those who want to prototype their EO data processing quickly. Each notebook is set-up in order to access the EO Data repository. Additionally, example notebooks are available to help users get started with their analysis. 

Access to this service is available by clicking on this link: [https://jupyterhub.dataspace.copernicus.eu/](https://jupyterhub.dataspace.copernicus.eu/){target="_blank"}

![](_images/JupyterLab_welcome.png)

Upon clicking the "ACCESS JUPYTERLAB" button, users will be directed to the login window. Please use Copernicus Data Space Ecosystem credentials to log in.


## Server Options

Once logged in to JupyterLab, users are offered a choice of 3 flavors of Jupyter instances: Small, Medium and Large.
The size of the instance is based on how many resources, like CPU cores and memory, are allocated to the notebook kernels.
All flavours are suitable for performing simple tasks and can run all samples provided in the samples folder. For fair resource usage, it is suggested to start with the "Small" flavour and switch to a larger one if kernel crashes is encounted caused by insufficient memory.

![](_images/Flavors_captcha.png)

## JupyterLab User Interface

After signing in, users will see a launcher with Python environments such as Python 3, Geo Science, OpenEO, and Sentinel Hub. Each environment is equipped with specific Python packages tailored to various requirements. Users can run their code in a notebook or a console, depending on their preference. Additionally, options are provided to create text files, markdown files, or Python files, allowing users to work with different types of documents as needed.

![](_images/FirstLook_jupyter.png)

For a more detailed overview of the JupyterLab user interface, refer to the [datacamp tutorial](https://www.datacamp.com/tutorial/installing-jupyter-notebook){target="_blank"}.


## Creating and Managing Notebooks

By default, sample notebooks are provided in the folder samples. 

To create a notebook in JupyterLab, users can easily select their desired kernel from the Notebook section in the launcher. Clicking on the kernel of choice will create a new notebook named "Untitled.ipynb". If renaming the notebook is desired, users can right-click on the notebook name in the sidebar and select the "rename" option.

## Installing additional packages

Additional Python packages can be installed if necessary. This can be done both from the Notebook Terminal, which is located in the Launcher tab, or within a Notebook cell. For e.g.:

::: {.panel-tabset}

# Terminal

`pip install required_package`

# Notebook

`!pip install required_package`

:::



<!-- ## Copernicus Dataspace Dataset

Each Notebook has a direct access to the EO Data repository. -->


## Collaboration and Sharing

JupyterLab allows collaborative work with the functionality to share it with multiple users. They can edit and view the same notebooks or projects in real-time. It also offers various sharing options, including exporting notebooks to different formats (HTML, PDF, Markdown) and publishing them on platforms like GitHub or JupyterHub. These features empower users to easily share their work, communicate findings, and collaborate with a broader audience, promoting efficient collaboration and seamless knowledge dissemination.


## Storage

When starting the notebook, in the file navigation pane (the sidebar - #2), two folders will be visible:

* `mystorage`
* `samples`

> All other folders' availability will be limited to the current session only. 

### `mystorage`

This is a persistent storage with 10GB of space, which is automatically created for each user during the first login to JupyterLab.
The storage is hosted in the CloudFerro cloud and can be used to save notebooks between the sessions, store the results or uploaded data files.

The storage area remains preserved when the user logs out, and the Jupyter kernel is shut down due to inactivity. It stays available for up to 15 days from the user's last login. A notification will be sent to the user to log in to JupyterLab to reset the timer and maintain data preservation. If no action is taken, files are deleted from CloudFerro cloud storage.

::: {.callout-important title="Missing folders?" collapse="true"}

If the `mystorage` folder was lost due to inactivity for several weeks, user can request restoration from our support team, though it's not guaranteed. If the folder disappeared while still active in the past few days, try restarting the server by going to File -> Hub Control Panel -> Stop My Server, then Start My Server. If the issue persists, reach out to our support team for possible solution.

:::

### `samples`

These folders are recreated with every start of the Jupyter kernel.
The `samples` folder is always up-to-date with the latest version of notebooks.
If changes are made to the samples, please ensure to save the updated notebook in the `mystorage` area to ensure it can be accessed when returning after a period of inactivity.

## Session persistence

The Jupyter instance will remain running as long as there is interaction, and it will be kept alive for an additional 8 hours after the last activity. After this period, the instance will be shut off, requiring relaunching during the subsequent login.
All data saved in `mystorage` will be preserved but all other files will be deleted and additional packages (dependencies) which were installed using pip need to be reinstalled.





## Resources and References:

Here are some helpful links for effectively using JupyterLab in Copernicus Dataspace Ecosystem:

* [JupyterLab Documentation](https://jupyterlab.readthedocs.io/en/stable/){target="_blank"}
* [Notebook Documentation](https://jupyter-notebook.readthedocs.io/en/stable/){target="_blank"}
* [Basic Notebook Tutorials](https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Notebook%20Basics.html){target="_blank"}

