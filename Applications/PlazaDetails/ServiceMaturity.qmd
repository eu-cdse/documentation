---
title: "Service Maturity"
---

All the services on the openEO algorithm plaza are assigned a maturity level that indicates what users can expect from the service in regard to its performance and metadata. Currently, we have five different maturity levels for each service, namely Prototype being the primary and default level, followed by Incubating, Verified, Validated and Operational as advanced services. These levels are determined solely based on software readiness and user documentation criteria. These criteria are generally designed to ensure that the service meets specific standards and provides customers with a certain level of quality.


## Level 1: Prototype

By default, every published service will have a prototype level. It is expected that service providers consider the following points when publishing a service:

- The service is executable, and basic logging information is supported.

- A possible reference or a general overview of what it tries to implement is provided as service metadata.

:::{callout-note}

If your service satisfies the criteria for a higher level, you can request an upgrade anytime once your service is published. Nevertheless, please note that every criterion must be satisfied for an upgrade.

:::

## Level 2: Incubating

In addition to the criteria for prototype level, a few additional criteria, as mentioned below, need to be satisfied to be upgraded to incubating service.

- Service metadata should also include an example of executing the service along with the expected output format.
  
- An approximate assumption on how much user credit is required to execute a service should be provided.

:::{callout-note}

Note that no added value will be associated with services with a prototype or incubating levels. In other words, approximate credit will include added value cost only on services that are either verified, validated or operational.

:::

## Level 3: Verified or Validated

When a service is labelled as either verified or validated, they mark the same level of maturity. Users can expect the same level of performance from them, but the naming difference is due to its irrelevance/relevance to software validation reports as a part of user documentation.

### Level 3a: Verified

- A comprehensive functional and integration test should be possible.
  
- There should be advanced logging that could help while debugging.
  
- Service metadata should include information on detailed descriptions of the services, their parameters and a link to a publication that supports the methodology adopted. An example of executing service expected outcome should be provided in a similar manner to that of incubating service.

- Approximate cost estimation on a larger scale should be presented.

:::{callout-note}

Please mention or provide a report to the support team if there exist any constraints/limitations with the services that should be considered.

:::

### Level 3b: Validated

- All the criteria mentioned for the verified level are applicable to this level, along with the additional criteria that the validation report should be provided either as a separate document to the support team or a non-expiring link.

:::{callout-note}

Although services can be either of verified or validated type, i.e. if a service satisfies all the criteria mentioned under verified but does not provide a validation report despite being relevant to them will be labelled as incubating.

:::

## Level 4: Operational

A highly improved service can only be marked with the highest level of maturity i.e. operational, when it fully satisfies the following criteria:

- All the conditions to be either verified or validated should be satisfied.

- The service has been shown to fit large-scale production and integration in an operating system.

- Rules and constraints for estimating resource usage should be provided as a document to the support team.

- Service lifecycle management policy should be available for the end users.

- An article summarising the process used for the service should be available on a peer-reviewed website or journal or a conference article (There is no limitation to a specific journal, but proof that the article was peer-reviewed should be provided to the openEO algorithm plaza support service).

## Requesting a change of the maturity level

Based on the fulfilment of the above criteria, service providers can request an upgrade of the service by submitting a ticket at our [help center](https://helpcenter.dataspace.copernicus.eu/hc/en-gb).
