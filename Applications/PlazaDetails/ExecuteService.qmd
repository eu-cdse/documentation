---
title: "Execute a service"
aliases: 
  - '/Applications/PlazaDetails/ExecuteService.html'
---

<div style="text-align: justify">

Services can be executed using the tools provided by openEO. The table below provides a brief summary of the different tools available:

| Tool | Description | 
| --- | --- |
| openEO Web Editor | A web-based interface for executing openEO processes. | 
| Command Line Interface (CLI)	 | Allows execution of openEO processes through the command line. | 
| Python Client | 	A Python library facilitating interaction with openEO services programmatically. | 
| R Client	 | An R library for integrating openEO services into R scripts. | 

When publishing a service on the openEO algorithm plaza, a user can choose to provide the following information in the service details:

* An executable link which redirects the user to the online orchestrator's user interface. If this is the case, an `ACCESS SERVICE` button will appear when opening an openEO algorithm plaza service.

* Sample code in the service description on how to execute a service programmatically. 


::: {.callout-important}

There is a limitation when executing a service (User Defined Processes) in Copernicus Dataspace Ecosystem, that it only works collection from 2017 or so onwards. Moreover, it is recommended to test it for multiple consecutive years.

:::

## Online user interface

openEO provide an online user interface where users can execute services directly in a [web-editor](https://openeo.dataspace.copernicus.eu/){target='_blank'}. 
Through these graphical user interfaces, users can execute, link, and configure different services. More information on the usage of the online applications is presented in the table below.

|openEO|
|---|
| [Access](https://openeo.dataspace.copernicus.eu){target="_blank"} |
| [Documentation](https://documentation.dataspace.copernicus.eu/APIs/openEO/openEO.html){target="_blank"} |

## Client libraries

openEO provides client libraries to support the creation and execution of JavaScript, Python and R services. The full client libraries documentation is available on the official openEO support pages:

* [JavaScript](https://documentation.dataspace.copernicus.eu/APIs/openEO/JavaScript_Client/JavaScript.html){target="_blank"}
* [Python](https://documentation.dataspace.copernicus.eu/APIs/openEO/Python_Client/Python.html){target="_blank"}
* [R](https://documentation.dataspace.copernicus.eu/APIs/openEO/R_Client/R.html){target="_blank"}

The following example shows a code sample on how to execute a service through the openEO Python Client.

```python
import openeo

# Setup parameters
aoi = {
    "type": "Polygon",
    "coordinates": [
        [
            [
                5.179324150085449,
                51.2498689148547
            ],
            [
                5.178744792938232,
                51.24672597710759
            ],
            [
                5.185289382934569,
                51.24504696935156
            ],
            [
                5.18676996231079,
                51.245342479161295
            ],
            [
                5.187370777130127,
                51.24918393390799
            ],
            [
                5.179324150085449,
                51.2498689148547
            ]
        ]
    ]
}
date = '2020-06-01'

# Setup connection with OpenEO
eoconn = openeo.connect("https://openeo.dataspace.copernicus.eu").authenticate_oidc("egi")

# Create a processing graph from the BIOMASS process using an active openEO connection
taskmap = eoconn.datacube_from_process("taskmap_generate", namespace="https://openeo.dataspace.copernicus.eu/openeo/1.0/processes/u:123456/taskmap_generate", aoi=aoi,
                                       date=date)

# Execute the openEO request as a batch job
taskmap_job = taskmap.download('task.nc')
```

To execute a service from the openEO algorithm plaza through one of the OpenEO client libraries, it is important to use the *datacube_from_process* function. It accepts the ID and namespace of the service. 
Both are made available in the service description on the openEO algorithm plaza. 
The full documentation on using the function is available on the official [openEO documentation](https://open-eo.github.io/openeo-python-client/datacube_construction.html#datacube-from-process){target="_blank"}.
