---
title: "Publish a Service"
aliases: 
  - "/Applications/PlazaDetails/PublishService.html"
---
The openEO Algorithm Plaza also provides a self-service onboarding wizard that enables users to publish their services effortlessly. It assigns a [service maturity](ServiceMaturity.qmd) label to each onboarded service.

Users can publish their algorithm as a service in the openEO Algorithm Plaza. These algorithms are expected to address Earth Observation solutions and implement them using openEO. When set as public, the service is then available to all users in the same way as any other service in the Algorithm Plaza. 

![](../_images/PlazaManageService.png)

Users are directed to the described screen when "Services" is selected from the sub-menu options under the "Dashboard" section of the portal. If no services have been published yet, an option to "REGISTER YOUR FIRST SERVICE" is displayed. However, if services have already been published, a list of the services published by the user or their organization is shown.


> For users who are members of multiple organizations and intend to publish an algorithm from a specific organization, it is important to ensure they are logged in to that particular organization. This can be verified by navigating to the [profile page](ManageOrg.qmd) and, if needed, [switching](ManageOrg.qmd#switch-between-organisation) the 'Linked Organization'.

![](../_images/services_list.png)

Already created services display an avatar (at this stage, just a colour and initials from the service name), the service name, and a service status indication. Users can click on the avatar or the service's name to load its detail page. Additionally, users can click on the "Register service" CTA button to load the add service page and create a new service.

Furthermore, together with the service cards created, users can see a card area with a `REGISTER NEW SERVICE` CTA button. This button will load the add service page to create a new service.

## Develop an openEO algorithm

A good integration in openEO algorithm plaza begins as user starts with their algorithm.

In openEO, a 'datacube' view is used, which hides a lot of the complexity when working with huge EO data archives.
It provides full archive access to the most popular datasets. 
To integrate existing code, the concept of 'User Defined Functions' ([UDFs](https://open-eo.github.io/openeo-python-client/udf.html){target="_blank"}) can be used. Furthermore, Parallelization and scalability are taken care of.

#### Working with openEO

To get familiar in working we openEO we recommend to start with a basic introduction on using openEO can be found [here](https://documentation.dataspace.copernicus.eu/APIs/openEO/openEO.html){target="_blank"}. Furthermore, to deploy an openEO algorithm as a service, the ['user defined process'](https://open-eo.github.io/openeo-python-client/udp.html){target="_blank"} functionality can be used.

## Register and publish your service

Once a algorithm is ready, user can register and publish it. 
The following sections will guide through the publishing process.

Clicking the **Register your first service** button will present a wizard to enter the necessary information regarding the service.

##### Step 1: Register your service

The first step involves selecting the type of service to publish. Currently, only services integrated with openEO as an orchestrator are supported.

![](../_images/select_service.png)

##### Step 2: Input general information

TThe following table outlines the basic information fields required for the service at this step::

| Field | Required | Description |
| --- | --- | --- |
| Service name | Yes | The service's title that will be displayed in the openEO algorithm plaza. |
| Summary | No | Short description of the service. The summary will be visible in the openEO algorithm plaza overview.|
| Description | No | The service description, begin with an algorithm overview, followed by a brief methodology. It is helpful to list required parameters and include examples and output images for user guidance.|
| Avatar | No | URL to an image that can be used an avatar of the service. The avatar will be visible in the openEO algorithm plaza overview. |

##### Step 3: Additional Sections

In addition to the basic information mentioned above, user can provide more details on their service by adding additional sections. The following sections are available:

* Parameters: A list of all the parameters that should be fed to the service to execute it. The name, type, description, and default value for each parameter should be specified.
* Usage example(Python code): A Python code example to demonstrate how to use the service. The example should include the service's input parameters and the expected output.
* Results: Service's results and it's output format should be mentioned.
* Cost Estimation: An idea of the resource consumption and time required to run the service for a given input.
* References: A list of references to publications, websites, or other resources relevant to the service should be provided. 

##### Step 4: Add labels

Multiple labels can be added to the service to assist users in finding it within the openEO Algorithm Plaza. These labels serve as filters within the marketplace and also indicate the service's category.

##### Step 5: Select service visibility

The service can be designated as either public or private. If set to public, it will be visible to all users in the openEO Algorithm Plaza. On the other hand, if set to private, only the user and organization members will have access to the service.

Click on `REGISTER SERVICE` to finish the basic registration.
Finishing the basic registration allows to provide more details on the service by either clicking the `NEXT` button or `REMOVE` to delete the service or even `BACK TO SERVICE` to exit the editing of the service.

##### Step 6: Add Media Files and Links

In the **Media Files and Links** section, images can be uploaded to be displayed when a user views the service on the catalogue. Images can be added by dragging and dropping files into the designated area or by clicking the plus icon. Additionally, multiple URLs can be specified to be shown in the detailed information of the service.

##### Step 7: Add openEO Settings

In the **openEO Settings** section openEO namespace and service ID of the service should be filled in.
Entering this information will enable the `Access Service` button, allowing visitors of openEO algorithm plaza to execute the service through the [openEO Web Editor](https://openeo.dataspace.copernicus.eu/){target="_blank"}.
The required information is represented in the following table:

| Field | Required | Description |
| --- | --- | --- |
| Namespace | Yes | Namespace of openEO service. When the service was created through a [User Defined Process (UDP)](https://open-eo.github.io/openeo-python-client/cookbook/udp_sharing.html){target="_blank"}, the namespace is formatted as `u:<publisher username/id>`. This information can be extracted from the public URL when creating and sharing the UDP through openEO. |
| Service name | Yes | Name of the service as shared within openEO. For a [User Defined Process (UDP)](https://open-eo.github.io/openeo-python-client/cookbook/udp_sharing.html){target="_blank"}, the service name corresponds with the ID of the service. |


Congratulations! The service has been successfully published in the openEO Algorithm Plaza. It can now be viewed and shared with others. Furthermore, it is recommended to go through the [Manage a Service](ManageService.qmd) documentation to learn how to manage the service.